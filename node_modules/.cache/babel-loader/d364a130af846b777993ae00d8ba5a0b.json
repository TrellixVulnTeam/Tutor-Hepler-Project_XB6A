{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdcth\\\\Desktop\\\\Tutor-Hepler-Project\\\\src\\\\components\\\\management\\\\subject\\\\ChooseGrade.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { Box, InputLabel, MenuItem, FormControl, Select, Button, Modal, Typography, TextField } from '@mui/material';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nconst ChooseGrade = props => {\n  _s();\n\n  const {\n    listGrade,\n    handleChangeIdSelected\n  } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false); // const [schoolName, setSchoolName] = useState('');\n  // const [schoolType, setSchoolType] = useState('');\n  // const [schoolAddress, setSchoolAddress] = useState('');\n  // const [schoolArea, setSchoolArea] = useState('');\n  // const handleAddSchool = () => {\n  //     try {\n  //         axios\n  //             .post(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/schools\", {\n  //                 \"schoolName\": schoolName,\n  //                 \"address\": schoolAddress,\n  //                 \"schoolLevel\": parseInt(schoolType),\n  //                 \"areaId\": schoolArea\n  //             })\n  //             .then(() => {\n  //                 window.location.reload();\n  //             })\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // };\n  // const handleChangeSchoolName = (event) => {\n  //     setSchoolName(event.target.value);\n  // }\n  // const handleChangeSchoolType = (event) => {\n  //     setSchoolType(event.target.value);\n  // }\n  // const handleChangeSchoolAddress = (event) => {\n  //     setSchoolAddress(event.target.value);\n  // }\n  // const handleChangeSchoolArea = (event) => {\n  //     setSchoolArea(event.target.value);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"inline-flex\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseGrade, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = ChooseGrade;\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\nconst listSchoolType = [{\n  value: '5',\n  label: 'Tieu hoc'\n}, {\n  value: '9',\n  label: 'Trung hoc Co sÆ¡'\n}, {\n  value: '12',\n  label: 'Trung hoc Pho thong'\n}];\nexport default ChooseGrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseGrade\");","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/components/management/subject/ChooseGrade.jsx"],"names":["React","useState","axios","Box","InputLabel","MenuItem","FormControl","Select","Button","Modal","Typography","TextField","AddCircleOutlineIcon","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","ChooseGrade","props","listGrade","handleChangeIdSelected","open","setOpen","handleOpen","handleClose","display","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","listSchoolType","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,MAAjD,EAAyDC,MAAzD,EAAiEC,KAAjE,EAAwEC,UAAxE,EAAoFC,SAApF,QAAqG,eAArG;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;;AAGAV,KAAK,CAACW,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACRA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC,EAA1E;AACA,SAAOJ,MAAP;AACH,CAJL,EAKKK,KAAD,IAAW;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPL;;AAUA,MAAMG,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwCF,KAA9C;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB7B,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAM6B,UAAU,GAAG,MAAMD,OAAO,CAAC,IAAD,CAAhC;;AACA,QAAME,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC,CAN2B,CAQ3B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6DH,CAzGD;;GAAMR,W;;KAAAA,W;AA4GN,MAAMS,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,UADA;AAEVC,EAAAA,GAAG,EAAE,KAFK;AAGVC,EAAAA,IAAI,EAAE,KAHI;AAIVC,EAAAA,SAAS,EAAE,uBAJD;AAKVC,EAAAA,KAAK,EAAE,GALG;AAMVC,EAAAA,OAAO,EAAE,kBANC;AAOVC,EAAAA,MAAM,EAAE,gBAPE;AAQVC,EAAAA,SAAS,EAAE,EARD;AASVC,EAAAA,CAAC,EAAE;AATO,CAAd;AAYA,MAAMC,cAAc,GAAG,CACnB;AACIC,EAAAA,KAAK,EAAE,GADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CADmB,EAKnB;AACID,EAAAA,KAAK,EAAE,GADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CALmB,EASnB;AACID,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,KAAK,EAAE;AAFX,CATmB,CAAvB;AAgBA,eAAerB,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { Box, InputLabel, MenuItem, FormControl, Select, Button, Modal, Typography, TextField } from '@mui/material'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\n\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst ChooseGrade = (props) => {\r\n    const { listGrade, handleChangeIdSelected } = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    // const [schoolName, setSchoolName] = useState('');\r\n    // const [schoolType, setSchoolType] = useState('');\r\n    // const [schoolAddress, setSchoolAddress] = useState('');\r\n    // const [schoolArea, setSchoolArea] = useState('');\r\n\r\n    // const handleAddSchool = () => {\r\n    //     try {\r\n    //         axios\r\n    //             .post(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/schools\", {\r\n    //                 \"schoolName\": schoolName,\r\n    //                 \"address\": schoolAddress,\r\n    //                 \"schoolLevel\": parseInt(schoolType),\r\n    //                 \"areaId\": schoolArea\r\n    //             })\r\n    //             .then(() => {\r\n    //                 window.location.reload();\r\n    //             })\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // };\r\n\r\n    // const handleChangeSchoolName = (event) => {\r\n    //     setSchoolName(event.target.value);\r\n    // }\r\n    // const handleChangeSchoolType = (event) => {\r\n    //     setSchoolType(event.target.value);\r\n    // }\r\n    // const handleChangeSchoolAddress = (event) => {\r\n    //     setSchoolAddress(event.target.value);\r\n    // }\r\n    // const handleChangeSchoolArea = (event) => {\r\n    //     setSchoolArea(event.target.value);\r\n    // }\r\n\r\n\r\n    return (\r\n        <div style={{ display: \"inline-flex\" }}>\r\n            {/* <div style={{ width: 900 }}>\r\n                <Box sx={{ minWidth: 120 }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel>Select Grade</InputLabel>\r\n                        <Select onChange={handleChangeIdSelected}>\r\n                            <MenuItem value=\"all\">All</MenuItem>\r\n                            {listGrade.map((item) => {\r\n                                return [\r\n                                    <MenuItem value={item.areaId}>{item.areaName}</MenuItem>\r\n                                ]\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n            </div>\r\n\r\n            <Button variant=\"contained\" startIcon={<AddCircleOutlineIcon/>} style={{ marginLeft: 75, width: 125 }} onClick={handleOpen}>\r\n                Add new\r\n            </Button>\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                <Box sx={style} >\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Add new School\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        <div style={{ display: 'inline-flex' }}>\r\n                            <TextField id=\"outlined-basic\" label=\"School name:\" size=\"small\" variant=\"outlined\" value={schoolName} onChange={handleChangeSchoolName} /><br />\r\n                            <div style={{ minWidth: 128 }}>\r\n                                <TextField id=\"outlined-select-currency\" select label=\"Select school type\" sx={{ width: 190, marginLeft: 3 }}  onChange={handleChangeSchoolType}>\r\n                                    {listSchoolType.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                        </div>\r\n                        <TextField id=\"outlined-basic\" label=\"Address:\" size=\"small\" variant=\"outlined\" style={{ marginTop: '25' }} value={schoolAddress} onChange={handleChangeSchoolAddress} /><br />\r\n\r\n                        <div style={{ width: 185 }}>\r\n                            <Box sx={{ minWidth: 120 }}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Select Area</InputLabel>\r\n                                    <Select onChange={handleChangeSchoolArea}>\r\n                                        {listArea.map((item) => {\r\n                                            return [\r\n                                                <MenuItem value={item.areaId}>{item.areaName}</MenuItem>\r\n                                            ]\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </div>\r\n                        <button style={{ marginLeft: 230, backgroundColor: \"#04c23d\" }} onClick={() => handleAddSchool()}>Add</button>\r\n                    </Typography>\r\n                </Box>\r\n            </Modal> */}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst listSchoolType = [\r\n    {\r\n        value: '5',\r\n        label: 'Tieu hoc',\r\n    },\r\n    {\r\n        value: '9',\r\n        label: 'Trung hoc Co sÆ¡',\r\n    },\r\n    {\r\n        value: '12',\r\n        label: 'Trung hoc Pho thong',\r\n    },\r\n];\r\n\r\n\r\nexport default ChooseGrade;\r\n"]},"metadata":{},"sourceType":"module"}