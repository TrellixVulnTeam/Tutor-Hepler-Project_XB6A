{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/pdcth/Desktop/Tutor-Hepler-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/pdcth/Desktop/Tutor-Hepler-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/pdcth/Desktop/Tutor-Hepler-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./tutor.scss\";import axios from\"axios\";import Pagination from\"../../pagination/Pagination\";import Table from'@mui/material/Table';import TableBody from'@mui/material/TableBody';import TableCell from'@mui/material/TableCell';import TableContainer from'@mui/material/TableContainer';import TableHead from'@mui/material/TableHead';import TableRow from'@mui/material/TableRow';import Paper from'@mui/material/Paper';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";axios.interceptors.request.use(function(config){config.headers.authorization=\"Bearer \".concat(localStorage.getItem(\"jwtToken\"));return config;},function(error){return Promise.reject(error);});var Tutor=function Tutor(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tutor=_useState2[0],setTutor=_useState2[1];// const [loading, setLoading] = useState(false);\n// const [currentPage, setCurrentPage] = useState(1);\n// const [resultPerPage, setResultPerPage] = useState(9);\nuseEffect(function(){var fetchRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/tutors\",{params:{//PageNume: currentPage,\nPageSize:100}}).then(function(response){setTutor(response.data.data);//setLoading(false);\n});case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 8:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function fetchRequest(){return _ref.apply(this,arguments);};}();fetchRequest();},[]);// //Get current result\n// const indexOfLastResult = currentPage * resultPerPage;\n// const indexOfFirstResult = indexOfLastResult - resultPerPage;\n// const currentResult = tutor.slice(indexOfFirstResult, indexOfLastResult);\n// //Change page \n// const paginate = (pageNumber) => setCurrentPage(pageNumber);\n// return (\n//     <div className=\"container mt-5\">\n//         <Card result={currentResult} loading={loading}/>\n//         <Pagination resultPerPage={resultPerPage} totalResult={tutor.length} paginate={paginate} />\n//     </div>\n// )\n// return (\n//     <div className=\"col-12\">\n//         <table className=\"table table-bordered\" border=\"2\">\n//             <thead>\n//                 <tr>\n//                     <th>No.</th>\n//                     <th>Information</th>\n//                     <th>Grade</th>\n//                     <th>Create Date</th>                  \n//                 </tr>\n//             </thead>\n//             <tbody>\n//                 {tutor.map((item, id) => {\n//                     return [\n//                         <tr>\n//                             <td>{id + 1}</td>\n//                             <td>\n//                                 <img src={item.imagePath} width=\"60\" height=\"60\" style={{marginBottom: '45px', borderRadius: 20}}/>\n//                                 <p style={{display: 'inline-block', marginLeft: '5px'}}>\n//                                     <h6>{item.fullName}</h6>\n//                                     {item.email}<br/>\n//                                     {item.phoneNumber}\n//                                 </p>                                   \n//                             </td>\n//                             {/* <td>{<GetGrade id={item.gradeId}/>}</td>\n//                             <td>{<GetSchool id={item.schoolId}/>}</td>                                */}\n//                             <td>{item.courses.title}</td>\n//                             <td>{item.createAt}</td>\n//                         </tr>\n//                     ]\n//                 })}\n//             </tbody>\n//         </table>\n//     </div>\n// );\nreturn/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650},\"aria-label\":\"simple table\",children:[/*#__PURE__*/_jsx(TableHead,{style:{backgroundColor:'#79d9fc'},children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{style:{width:\"4%\"},children:\"No.\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",style:{width:\"33%\"},children:\"Personal Information\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",style:{width:\"16%\"},children:\"Email\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",style:{width:\"16%\"},children:\"Phone Number\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",style:{width:\"18%\"},children:\"Create Date\\xA0\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:tutor.map(function(item,id){return/*#__PURE__*/_jsxs(TableRow,{sx:{'&:last-child td, &:last-child th':{border:0}},children:[/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:id+1}),/*#__PURE__*/_jsxs(TableCell,{align:\"left\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.imagePath,width:\"50\",height:\"50\",style:{borderRadius:45}}),/*#__PURE__*/_jsx(\"p\",{style:{display:'inline-block',marginLeft:'5px'},children:/*#__PURE__*/_jsx(\"h6\",{children:item.fullName})})]}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:item.email}),/*#__PURE__*/_jsxs(TableCell,{align:\"center\",children:[\" \",item.phoneNumber]}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:item.createAt})]},id);})})]})});};export default Tutor;","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/components/management/tutor/Tutor.jsx"],"names":["React","useState","useEffect","axios","Pagination","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","Tutor","tutor","setTutor","fetchRequest","get","params","PageSize","then","response","data","console","log","minWidth","backgroundColor","width","map","item","id","border","imagePath","borderRadius","display","marginLeft","fullName","email","phoneNumber","createAt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./tutor.scss\";\r\nimport axios from \"axios\";\r\n\r\nimport Pagination from \"../../pagination/Pagination\";\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst Tutor = () => {\r\n    const [tutor, setTutor] = useState([]);\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [currentPage, setCurrentPage] = useState(1);\r\n    // const [resultPerPage, setResultPerPage] = useState(9);\r\n\r\n    useEffect(() => {\r\n        const fetchRequest = async () => {\r\n            //setLoading(true);\r\n            try {\r\n                await axios\r\n                    .get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/tutors\", {\r\n                        params: {\r\n                            //PageNume: currentPage,\r\n                            PageSize: 100\r\n                        }\r\n                    })\r\n                    .then((response) => {\r\n                        setTutor(response.data.data);\r\n                        //setLoading(false);\r\n                    });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchRequest();\r\n    }, []);\r\n\r\n    // //Get current result\r\n    // const indexOfLastResult = currentPage * resultPerPage;\r\n    // const indexOfFirstResult = indexOfLastResult - resultPerPage;\r\n    // const currentResult = tutor.slice(indexOfFirstResult, indexOfLastResult);\r\n\r\n    // //Change page \r\n    // const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    // return (\r\n    //     <div className=\"container mt-5\">\r\n    //         <Card result={currentResult} loading={loading}/>\r\n    //         <Pagination resultPerPage={resultPerPage} totalResult={tutor.length} paginate={paginate} />\r\n    //     </div>\r\n    // )\r\n\r\n    // return (\r\n    //     <div className=\"col-12\">\r\n    //         <table className=\"table table-bordered\" border=\"2\">\r\n    //             <thead>\r\n    //                 <tr>\r\n    //                     <th>No.</th>\r\n    //                     <th>Information</th>\r\n    //                     <th>Grade</th>\r\n    //                     <th>Create Date</th>                  \r\n    //                 </tr>\r\n    //             </thead>\r\n    //             <tbody>\r\n    //                 {tutor.map((item, id) => {\r\n    //                     return [\r\n    //                         <tr>\r\n    //                             <td>{id + 1}</td>\r\n    //                             <td>\r\n    //                                 <img src={item.imagePath} width=\"60\" height=\"60\" style={{marginBottom: '45px', borderRadius: 20}}/>\r\n    //                                 <p style={{display: 'inline-block', marginLeft: '5px'}}>\r\n    //                                     <h6>{item.fullName}</h6>\r\n    //                                     {item.email}<br/>\r\n    //                                     {item.phoneNumber}\r\n    //                                 </p>                                   \r\n    //                             </td>\r\n    //                             {/* <td>{<GetGrade id={item.gradeId}/>}</td>\r\n    //                             <td>{<GetSchool id={item.schoolId}/>}</td>                                */}\r\n    //                             <td>{item.courses.title}</td>\r\n    //                             <td>{item.createAt}</td>\r\n\r\n    //                         </tr>\r\n    //                     ]\r\n    //                 })}\r\n    //             </tbody>\r\n    //         </table>\r\n    //     </div>\r\n    // );\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead style={{ backgroundColor: '#79d9fc' }}>\r\n                    <TableRow>\r\n                        <TableCell style={{ width: \"4%\" }}>No.</TableCell>\r\n                        <TableCell align=\"center\" style={{ width: \"33%\" }}>Personal Information</TableCell>\r\n                        <TableCell align=\"center\" style={{ width: \"16%\" }}>Email</TableCell>\r\n                        <TableCell align=\"center\" style={{ width: \"16%\" }}>Phone Number</TableCell>\r\n                        <TableCell align=\"right\" style={{ width: \"18%\" }}>Create Date&nbsp;</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {tutor.map((item, id) => (\r\n                        <TableRow key={id} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                            <TableCell align=\"right\">{id + 1}</TableCell>\r\n                            <TableCell align=\"left\">\r\n                                <img src={item.imagePath} width=\"50\" height=\"50\" style={{ borderRadius: 45 }} />\r\n                                <p style={{ display: 'inline-block', marginLeft: '5px' }}>\r\n                                    <h6>{item.fullName}</h6>\r\n                                </p>\r\n                            </TableCell>\r\n                            <TableCell align=\"center\">{item.email}</TableCell>\r\n                            <TableCell align=\"center\"> {item.phoneNumber}</TableCell>\r\n                            <TableCell align=\"right\">{item.createAt}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default Tutor;\r\n\r\n"]},"metadata":{},"sourceType":"module"}