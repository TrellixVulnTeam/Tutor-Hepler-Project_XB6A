{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdcth\\\\Desktop\\\\Tutor-Hepler-Project\\\\src\\\\components\\\\management\\\\student\\\\Student.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./student.scss\";\nimport axios from \"axios\";\nimport Pagination from \"../../pagination/Pagination\";\nimport GetGrade from \"./GetGrade\";\nimport GetSchool from \"./GetSchool\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nconst Student = () => {\n  _s();\n\n  const [student, setStudent] = useState([]); //const [loading, setLoading] = useState(false);\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [resultPerPage, setResultPerPage] = useState(6);\n\n  useEffect(() => {\n    const fetchRequest = async () => {\n      //setLoading(true);\n      try {\n        await axios.get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/students\", {\n          params: {\n            //PageNume: currentPage,\n            PageSize: 100\n          }\n        }).then(response => {\n          setStudent(response.data.data); // setLoading(false);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchRequest();\n  }, []); // //Get current result\n  // const indexOfLastResult = currentPage * resultPerPage;\n  // const indexOfFirstResult = indexOfLastResult - resultPerPage;\n  // const currentResult = student.slice(indexOfFirstResult, indexOfLastResult);\n  // //Change page \n  // const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  // return (\n  //     <div className=\"container mt-5\">\n  //         <Card result={currentResult} loading={loading} />\n  //         <Pagination resultPerPage={resultPerPage} totalResult={student.length} paginate={paginate} />\n  //     </div>\n  // )\n  // return (\n  //     <div className=\"col-12\">\n  //         <table className=\"table table-bordered\" border=\"2\">\n  //             <thead>\n  //                 <tr>\n  //                     <th>No.</th>\n  //                     <th>Information</th>\n  //                     <th>Grade</th>\n  //                     <th>School</th>\n  //                     <th>Create Date</th>                  \n  //                 </tr>\n  //             </thead>\n  //             <tbody>\n  //                 {student.map((item, id) => {\n  //                     return [\n  //                         <tr>\n  //                             <td>{id + 1}</td>\n  //                             <td>\n  //                                 <img src={item.imagePath} width=\"60\" height=\"60\" style={{marginBottom: '45px'}}/>\n  //                                 <p style={{display: 'inline-block', marginLeft: '5px'}}>\n  //                                     <h6>{item.fullName}</h6>\n  //                                     {item.email}<br/>\n  //                                     {item.phoneNumber}\n  //                                 </p>                                   \n  //                             </td>\n  //                             <td>{<GetGrade id={item.gradeId}/>}</td>\n  //                             <td>{<GetSchool id={item.schoolId}/>}</td>                               \n  //                             <td>{item.createAt}</td>\n  //                         </tr>\n  //                     ]\n  //                 })}\n  //             </tbody>\n  //         </table>\n  //     </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              width: \"6%\"\n            },\n            children: \"No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: student.map((item, id) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: id + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: item.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: item.fat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: item.carbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: item.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Student, \"1N9kYI2/3YzNL9G+rTVm4l+ZNqI=\");\n\n_c = Student;\nexport default Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/components/management/student/Student.jsx"],"names":["React","useState","useEffect","axios","Pagination","GetGrade","GetSchool","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","Student","student","setStudent","fetchRequest","get","params","PageSize","then","response","data","console","log","minWidth","width","map","item","id","border","fullName","fat","carbs","protein","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./student.scss\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"../../pagination/Pagination\";\r\nimport GetGrade from \"./GetGrade\";\r\nimport GetSchool from \"./GetSchool\";\r\n\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst Student = () => {\r\n    const [student, setStudent] = useState([]);\r\n    //const [loading, setLoading] = useState(false);\r\n    // const [currentPage, setCurrentPage] = useState(1);\r\n    // const [resultPerPage, setResultPerPage] = useState(6);\r\n\r\n    useEffect(() => {\r\n        const fetchRequest = async () => {\r\n            //setLoading(true);\r\n            try {\r\n                await axios\r\n                    .get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/students\", {\r\n                        params: {\r\n                            //PageNume: currentPage,\r\n                            PageSize: 100\r\n                        }\r\n                    })\r\n                    .then((response) => {\r\n                        setStudent(response.data.data);\r\n                        // setLoading(false);\r\n                    });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchRequest();\r\n    }, []);\r\n\r\n    // //Get current result\r\n    // const indexOfLastResult = currentPage * resultPerPage;\r\n    // const indexOfFirstResult = indexOfLastResult - resultPerPage;\r\n    // const currentResult = student.slice(indexOfFirstResult, indexOfLastResult);\r\n\r\n    // //Change page \r\n    // const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n    // return (\r\n    //     <div className=\"container mt-5\">\r\n    //         <Card result={currentResult} loading={loading} />\r\n    //         <Pagination resultPerPage={resultPerPage} totalResult={student.length} paginate={paginate} />\r\n    //     </div>\r\n    // )\r\n\r\n\r\n    // return (\r\n    //     <div className=\"col-12\">\r\n    //         <table className=\"table table-bordered\" border=\"2\">\r\n    //             <thead>\r\n    //                 <tr>\r\n    //                     <th>No.</th>\r\n    //                     <th>Information</th>\r\n    //                     <th>Grade</th>\r\n    //                     <th>School</th>\r\n    //                     <th>Create Date</th>                  \r\n    //                 </tr>\r\n    //             </thead>\r\n    //             <tbody>\r\n    //                 {student.map((item, id) => {\r\n    //                     return [\r\n    //                         <tr>\r\n    //                             <td>{id + 1}</td>\r\n    //                             <td>\r\n    //                                 <img src={item.imagePath} width=\"60\" height=\"60\" style={{marginBottom: '45px'}}/>\r\n    //                                 <p style={{display: 'inline-block', marginLeft: '5px'}}>\r\n    //                                     <h6>{item.fullName}</h6>\r\n    //                                     {item.email}<br/>\r\n    //                                     {item.phoneNumber}\r\n    //                                 </p>                                   \r\n    //                             </td>\r\n    //                             <td>{<GetGrade id={item.gradeId}/>}</td>\r\n    //                             <td>{<GetSchool id={item.schoolId}/>}</td>                               \r\n    //                             <td>{item.createAt}</td>\r\n\r\n    //                         </tr>\r\n    //                     ]\r\n    //                 })}\r\n    //             </tbody>\r\n    //         </table>\r\n    //     </div>\r\n    // );\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell style={{width: \"6%\"}}>No.</TableCell>\r\n                        <TableCell align=\"right\">Calories</TableCell>\r\n                        <TableCell align=\"right\">Fat&nbsp;</TableCell>\r\n                        <TableCell align=\"right\">Carbs&nbsp;</TableCell>\r\n                        <TableCell align=\"right\">Protein&nbsp;</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {student.map((item, id) => (\r\n                        <TableRow key={item.name} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>               \r\n                            <TableCell align=\"right\">{id + 1}</TableCell>\r\n                            <TableCell align=\"right\">{item.fullName}</TableCell>\r\n                            <TableCell align=\"right\">{item.fat}</TableCell>\r\n                            <TableCell align=\"right\">{item.carbs}</TableCell>\r\n                            <TableCell align=\"right\">{item.protein}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default Student;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}