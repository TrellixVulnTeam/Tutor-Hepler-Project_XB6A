{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdcth\\\\Desktop\\\\Tutor-Hepler-Project\\\\src\\\\components\\\\management\\\\area\\\\Area.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CancelIcon from '@mui/icons-material/Close';\nimport { Box, InputLabel, MenuItem, FormControl, Select, Modal, Typography, TextField } from '@mui/material';\nimport { useGridApiRef, DataGridPro, GridToolbarContainer, GridActionsCellItem } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nconst Area = () => {\n  _s();\n\n  const [listArea, setListArea] = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [newAreaName, setNewAreaName] = useState();\n  useEffect(() => {\n    const fetchRequest = async () => {\n      try {\n        await axios.get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/areas\", {\n          params: {\n            PageSize: 100\n          }\n        }).then(response => {\n          setListArea(response.data);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchRequest();\n  }, []);\n\n  const handleEditClick = id => {// try {\n    //     await axios\n    //         .get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/areas\", {\n    //             params: {\n    //                 PageSize: 100,\n    //             }\n    //         })\n    //         .then((response) => {\n    //             setListArea(response.data)\n    //         });\n    // } catch (error) {\n    //     console.log(error);\n    // }\n  };\n\n  const handleDeleteClick = id => {\n    console.log(\"Delete\", id);\n  };\n\n  const handleChangeAreaName = event => {\n    setNewAreaName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        style: {\n          backgroundColor: '#79fcd7'\n        },\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              width: \"4%\"\n            },\n            children: \"No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              width: \"36%\"\n            },\n            children: \"Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            style: {\n              width: \"16%\"\n            },\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: listArea.map((item, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: id + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: item.areaName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(GridActionsCellItem, {\n                icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 64\n                }, this),\n                onClick: handleOpen\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(GridActionsCellItem, {\n                icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 64\n                }, this),\n                onClick: () => handleDeleteClick(item.areaId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this)]\n          }, item.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            Modal: true,\n            open: open,\n            onClose: handleClose,\n            \"aria-labelledby\": \"modal-modal-title\",\n            \"aria-describedby\": \"modal-modal-description\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: style,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                id: \"modal-modal-title\",\n                variant: \"h6\",\n                component: \"h2\",\n                children: \"Add new School\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                id: \"modal-modal-description\",\n                sx: {\n                  mt: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'inline-flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"outlined-basic\",\n                    label: \"School name:\",\n                    size: \"small\",\n                    variant: \"outlined\",\n                    value: newAreaName,\n                    onChange: handleChangeAreaName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 183\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    marginLeft: 230,\n                    backgroundColor: \"#04c23d\"\n                  },\n                  onClick: () => handleEditClick(item.areaId),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Area, \"XmWVXsm+bX6Hv5W5AumecfYtUog=\");\n\n_c = Area;\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\nexport default Area;\n\nvar _c;\n\n$RefreshReg$(_c, \"Area\");","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/components/management/area/Area.jsx"],"names":["React","useState","useEffect","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","PropTypes","Button","AddIcon","EditIcon","DeleteIcon","SaveIcon","CancelIcon","Box","InputLabel","MenuItem","FormControl","Select","Modal","Typography","TextField","useGridApiRef","DataGridPro","GridToolbarContainer","GridActionsCellItem","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","Area","listArea","setListArea","open","setOpen","handleOpen","handleClose","newAreaName","setNewAreaName","fetchRequest","get","params","PageSize","then","response","data","console","log","handleEditClick","id","handleDeleteClick","handleChangeAreaName","event","target","value","minWidth","backgroundColor","width","map","item","border","areaName","areaId","name","style","mt","display","marginLeft","position","top","left","transform","bgcolor","boxShadow","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@mui/material/Button';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport CancelIcon from '@mui/icons-material/Close';\r\n\r\nimport { Box, InputLabel, MenuItem, FormControl, Select, Modal, Typography, TextField } from '@mui/material'\r\n\r\nimport {\r\n    useGridApiRef,\r\n    DataGridPro,\r\n    GridToolbarContainer,\r\n    GridActionsCellItem,\r\n} from '@mui/x-data-grid';\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n\r\nconst Area = () => {\r\n    const [listArea, setListArea] = useState([]);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const [newAreaName, setNewAreaName] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchRequest = async () => {\r\n            try {\r\n                await axios\r\n                    .get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/areas\", {\r\n                        params: {\r\n                            PageSize: 100,\r\n                        }\r\n                    })\r\n                    .then((response) => {\r\n                        setListArea(response.data)\r\n                    });\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchRequest();\r\n    }, [])\r\n\r\n    const handleEditClick = (id) => {\r\n        // try {\r\n        //     await axios\r\n        //         .get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/areas\", {\r\n        //             params: {\r\n        //                 PageSize: 100,\r\n        //             }\r\n        //         })\r\n        //         .then((response) => {\r\n        //             setListArea(response.data)\r\n        //         });\r\n\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n        // }\r\n    }\r\n\r\n    const handleDeleteClick = (id) => {\r\n        console.log(\"Delete\", id)\r\n    }\r\n\r\n    const handleChangeAreaName = (event) => {\r\n        setNewAreaName(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead style={{ backgroundColor: '#79fcd7' }}>\r\n                    <TableRow>\r\n                        <TableCell style={{ width: \"4%\" }}>No.</TableCell>\r\n                        <TableCell align=\"center\" style={{ width: \"36%\" }}>Area</TableCell>\r\n                        <TableCell align=\"center\" style={{ width: \"16%\" }}>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {listArea.map((item, id) => (\r\n                        <div>\r\n                            <TableRow key={item.name} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                                <TableCell align=\"right\">{id + 1}</TableCell>\r\n                                <TableCell align=\"right\">{item.areaName}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <GridActionsCellItem icon={<EditIcon />} onClick={handleOpen} />\r\n                                    <GridActionsCellItem icon={<DeleteIcon />} onClick={() => handleDeleteClick(item.areaId)} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <Modal Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                                <Box sx={style} >\r\n                                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                                        Add new School\r\n                                    </Typography>\r\n                                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                                        <div style={{ display: 'inline-flex' }}>\r\n                                            <TextField id=\"outlined-basic\" label=\"School name:\" size=\"small\" variant=\"outlined\" value={newAreaName} onChange={handleChangeAreaName} /><br />\r\n                                        </div>\r\n                                        <button style={{ marginLeft: 230, backgroundColor: \"#04c23d\" }} onClick={() => handleEditClick(item.areaId)}>Add</button>\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Modal>\r\n                        </div>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer >\r\n\r\n    );\r\n\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\n\r\nexport default Area;"]},"metadata":{},"sourceType":"module"}