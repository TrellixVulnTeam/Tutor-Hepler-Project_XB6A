{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdcth\\\\Desktop\\\\Tutor-Hepler-Project\\\\src\\\\pages\\\\dashboard\\\\CountPendingRequest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./dashboard.scss\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nconst CountPendingRequest = () => {\n  _s();\n\n  const [totalRequest, setTotalRequest] = useState();\n  useEffect(() => {\n    const fetchRequest = async () => {\n      try {\n        await axios.get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/tutor-requests\", {\n          params: {\n            PageSize: 100\n          }\n        }).then(response => {\n          let result = response.data.data;\n          let count = 0;\n          result.map(item => {\n            for (let i = 0; i < result.length; i++) {\n              console.log(\"TT\", item.status);\n\n              if (item.status == \"Pending\") {\n                count++;\n              }\n            }\n          });\n          console.log(\"RRRRRR\", count);\n          setTotalRequest(count);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: totalRequest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountPendingRequest, \"d048bzkzjiNQSPW5JTl+J1noCd4=\");\n\n_c = CountPendingRequest;\nexport default CountPendingRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountPendingRequest\");","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/pages/dashboard/CountPendingRequest.jsx"],"names":["React","useState","useEffect","axios","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","CountPendingRequest","totalRequest","setTotalRequest","fetchRequest","get","params","PageSize","then","response","result","data","count","map","item","i","length","console","log","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACRA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC,EAA1E;AACA,SAAOJ,MAAP;AACH,CAJL,EAKKK,KAAD,IAAW;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPL;;AAUA,MAAMG,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,YAAY,GAAG,YAAY;AAC7B,UAAI;AACA,cAAMf,KAAK,CACNgB,GADC,CACG,2EADH,EACgF;AAC9EC,UAAAA,MAAM,EAAE;AACJC,YAAAA,QAAQ,EAAE;AADN;AADsE,SADhF,EAMDC,IANC,CAMKC,QAAD,IAAc;AAChB,cAAIC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAA3B;AACA,cAAIC,KAAK,GAAG,CAAZ;AACAF,UAAAA,MAAM,CAACG,GAAP,CAAWC,IAAI,IAAI;AACf,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCE,cAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBJ,IAAI,CAACK,MAAvB;;AACA,kBAAIL,IAAI,CAACK,MAAL,IAAe,SAAnB,EAA8B;AAC1BP,gBAAAA,KAAK;AACR;AACJ;AAEJ,WARD;AASAK,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,KAAtB;AACAT,UAAAA,eAAe,CAACS,KAAD,CAAf;AACH,SApBC,CAAN;AAqBH,OAtBD,CAsBE,OAAOd,KAAP,EAAc;AACZmB,QAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACH;AACJ,KA1BD;;AA2BAM,IAAAA,YAAY;AACf,GA7BQ,EA6BN,EA7BM,CAAT;AA8BA,sBACI;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtCD;;GAAMD,mB;;KAAAA,mB;AAyCN,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./dashboard.scss\"\r\nimport axios from \"axios\";\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst CountPendingRequest = () => {\r\n    const [totalRequest, setTotalRequest] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchRequest = async () => {\r\n            try {\r\n                await axios\r\n                    .get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/tutor-requests\", {\r\n                        params: {\r\n                            PageSize: 100,\r\n                        }\r\n                    })\r\n                    .then((response) => {\r\n                        let result = response.data.data;\r\n                        let count = 0;\r\n                        result.map(item => {\r\n                            for (let i = 0; i < result.length; i++) {\r\n                                console.log(\"TT\", item.status);\r\n                                if (item.status == \"Pending\") {\r\n                                    count++;\r\n                                }\r\n                            }\r\n                            \r\n                        })\r\n                        console.log(\"RRRRRR\", count);\r\n                        setTotalRequest(count);\r\n                    });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchRequest();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {totalRequest}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CountPendingRequest\r\n"]},"metadata":{},"sourceType":"module"}