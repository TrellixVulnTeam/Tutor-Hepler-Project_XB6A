{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdcth\\\\Desktop\\\\Tutor-Hepler-Project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport firebase from \"firebase\";\nimport { useEffect, useState } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport axiosClient from \"./api/axiosClient\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(config => {\n  const isContentTypeNotSetOrContainsApplicationJson = !config.headers || !config.headers['Content-Type'] || config.headers['Content-Type'].includes('application/json');\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\n\n  if (isContentTypeNotSetOrContainsApplicationJson) {\n    config.headers = config.headers || {};\n    config.headers['Content-Type'] = 'application/json';\n    config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\n  }\n\n  return config;\n}); // axios.interceptors.request.use(\n//   (config) => {\n//     config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;  \n//     config.headers\n//     return config;\n//   },\n//   (error) => {\n//     return Promise.reject(error);\n//   }\n// );\n// Configure Firebase.\n\nconst config = {\n  apiKey: \"AIzaSyDefd9qBWYVGTqBlmDoyJHVu9hmlJufT68\",\n  authDomain: \"tutor-helper-6faa2.firebaseapp.com\",\n  projectId: \"tutor-helper-6faa2\",\n  storageBucket: \"tutor-helper-6faa2.appspot.com\",\n  messagingSenderId: \"1083830889210\",\n  appId: \"1:1083830889210:web:2f65739bdbdf07c35b3743\",\n  measurementId: \"G-WLNV3EQDWD\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: \"popup\",\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: \"/\",\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID]\n};\n\nfunction App() {\n  _s();\n\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n  // Listen to the Firebase Auth state and set the local state.\n\n  useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      const token = firebase.auth().currentUser.getIdToken(true);\n      localStorage.setItem(\"idToken\", user.xa);\n      axios //.post(\"/auth/sign-in-admin\", { idToken: user.xa}) \n      .post(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/auth/sign-in-admin\", {\n        idToken: user.xa\n      }).then(response => {\n        console.log(\"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\");\n        console.log(\"EEEEEEEEEEE\" + response.data); //localStorage.setItem(\"jwtToken\", response.jwtToken)\n      });\n      setIsSignedIn(!!user);\n    });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n\n  if (!isSignedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please sign-in:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n        uiConfig: uiConfig,\n        firebaseAuth: firebase.auth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Layout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ES28sB8qKBhxH4u/sxzLxEgNPXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/App.js"],"names":["firebase","useEffect","useState","StyledFirebaseAuth","BrowserRouter","Route","Layout","axiosClient","axios","interceptors","request","use","config","isContentTypeNotSetOrContainsApplicationJson","headers","includes","authorization","localStorage","getItem","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","App","isSignedIn","setIsSignedIn","unregisterAuthObserver","onAuthStateChanged","user","token","currentUser","getIdToken","setItem","xa","post","idToken","then","response","console","log","data"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Layout from \"./components/layout/Layout\";\r\nimport axiosClient from \"./api/axiosClient\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const isContentTypeNotSetOrContainsApplicationJson =\r\n      !config.headers ||\r\n      !config.headers['Content-Type'] ||\r\n      config.headers['Content-Type'].includes('application/json');\r\n      config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;  \r\n  if (isContentTypeNotSetOrContainsApplicationJson) {\r\n      config.headers = config.headers || {};\r\n      config.headers['Content-Type'] = 'application/json';\r\n      config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;  \r\n  }\r\n  return config;\r\n});\r\n\r\n// axios.interceptors.request.use(\r\n//   (config) => {\r\n//     config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;  \r\n//     config.headers\r\n//     return config;\r\n//   },\r\n//   (error) => {\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Configure Firebase.\r\nconst config = {\r\n  apiKey: \"AIzaSyDefd9qBWYVGTqBlmDoyJHVu9hmlJufT68\",\r\n  authDomain: \"tutor-helper-6faa2.firebaseapp.com\",\r\n  projectId: \"tutor-helper-6faa2\",\r\n  storageBucket: \"tutor-helper-6faa2.appspot.com\",\r\n  messagingSenderId: \"1083830889210\",\r\n  appId: \"1:1083830889210:web:2f65739bdbdf07c35b3743\",\r\n  measurementId: \"G-WLNV3EQDWD\",\r\n};\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n}\r\n\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: \"popup\",\r\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n  signInSuccessUrl: \"/\",\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n};\r\n\r\nfunction App() {\r\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\r\n\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase\r\n      .auth()\r\n      .onAuthStateChanged((user) => {\r\n        const token = firebase.auth().currentUser.getIdToken(true);\r\n        localStorage.setItem(\"idToken\", user.xa);\r\n        axios\r\n          //.post(\"/auth/sign-in-admin\", { idToken: user.xa}) \r\n          .post(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/auth/sign-in-admin\", { idToken: user.xa}) \r\n          .then(response => {\r\n            console.log(\"MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\")\r\n            console.log(\"EEEEEEEEEEE\" + response.data);\r\n            //localStorage.setItem(\"jwtToken\", response.jwtToken)\r\n          })\r\n        setIsSignedIn(!!user);      \r\n      });\r\n\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n  }, []);\r\n\r\n\r\n  if (!isSignedIn) {\r\n    return (\r\n      <div>\r\n        <h1>My App</h1>\r\n        <p>Please sign-in:</p>\r\n        <StyledFirebaseAuth\r\n          uiConfig={uiConfig}\r\n          firebaseAuth={firebase.auth()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Route path=\"/\" component={Layout}></Route>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}