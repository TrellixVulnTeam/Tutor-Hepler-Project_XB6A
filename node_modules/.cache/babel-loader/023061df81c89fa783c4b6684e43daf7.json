{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdcth\\\\Desktop\\\\Tutor-Hepler-Project\\\\src\\\\components\\\\management\\\\school\\\\ChooseArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./school.scss\";\nimport axios from \"axios\";\nimport { Box, InputLabel, MenuItem, FormControl, Select, Button, TextField } from '@mui/material';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nconst ChooseArea = props => {\n  _s();\n\n  const {\n    listArea,\n    handleChangeIdSelected\n  } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"inline-flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 900\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Select Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            onChange: handleChangeIdSelected,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), listArea.map((item, id) => {\n              return [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.areaId,\n                children: item.areaName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)];\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 52\n      }, this),\n      style: {\n        marginLeft: 75,\n        width: 125\n      },\n      onClick: handleOpen,\n      children: \"Add new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Add new School\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline-flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"School name:\",\n              size: \"small\",\n              variant: \"outlined\",\n              ref: \"schoolName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 131\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                minWidth: 128\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-select-currency\",\n                select: true,\n                label: \"Select school type\",\n                ref: \"schoolType\",\n                sx: {\n                  width: 190,\n                  marginLeft: 3\n                },\n                children: schoolType.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Address:\",\n            size: \"small\",\n            variant: \"outlined\",\n            ref: \"schoolAddress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 127\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 185\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                minWidth: 120\n              },\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Select Area\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  onChange: handleChangeIdSelected,\n                  children: listArea.map((item, id) => {\n                    return [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: item.areaId,\n                      children: item.areaName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 49\n                    }, this)];\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 230,\n              backgroundColor: \"#04c23d\"\n            },\n            onClick: () => {\n              addSchool();\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseArea, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = ChooseArea;\nexport default ChooseArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseArea\");","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/components/management/school/ChooseArea.jsx"],"names":["React","useState","useEffect","axios","Box","InputLabel","MenuItem","FormControl","Select","Button","TextField","AddCircleOutlineIcon","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","ChooseArea","props","listArea","handleChangeIdSelected","open","setOpen","handleOpen","handleClose","display","width","minWidth","map","item","id","areaId","areaName","marginLeft","style","mt","schoolType","option","value","label","backgroundColor","addSchool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./school.scss\"\r\nimport axios from \"axios\";\r\n\r\nimport { Box, InputLabel, MenuItem, FormControl, Select, Button, TextField } from '@mui/material'\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\n\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst ChooseArea = (props) => {\r\n    const { listArea, handleChangeIdSelected } = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <div style={{ display: \"inline-flex\" }}>\r\n            <div style={{ width: 900 }}>\r\n                <Box sx={{ minWidth: 120 }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel>Select Area</InputLabel>\r\n                        <Select onChange={handleChangeIdSelected}>\r\n                            <MenuItem value=\"all\">All</MenuItem>\r\n                            {listArea.map((item, id) => {\r\n                                return [\r\n                                    <MenuItem value={item.areaId}>{item.areaName}</MenuItem>\r\n                                ]\r\n                            })}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n            </div>\r\n\r\n            <Button variant=\"contained\" startIcon={<AddCircleOutlineIcon />} style={{ marginLeft: 75, width: 125 }} onClick={handleOpen}>\r\n                Add new\r\n            </Button>\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                <Box sx={style} >\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Add new School\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                        <div style={{ display: 'inline-flex' }}>\r\n                            <TextField id=\"outlined-basic\" label=\"School name:\" size=\"small\" variant=\"outlined\" ref=\"schoolName\"/><br />\r\n                            <div style={{ minWidth: 128 }}>\r\n                                <TextField id=\"outlined-select-currency\" select label=\"Select school type\" ref=\"schoolType\" sx={{ width: 190, marginLeft: 3 }}>\r\n                                    {schoolType.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </div>\r\n                        </div>\r\n                        <TextField id=\"outlined-basic\" label=\"Address:\" size=\"small\" variant=\"outlined\" ref=\"schoolAddress\" /><br />\r\n\r\n                        <div style={{ width: 185 }}>\r\n                            <Box sx={{ minWidth: 120 }}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Select Area</InputLabel>\r\n                                    <Select onChange={handleChangeIdSelected}>\r\n                                        {listArea.map((item, id) => {\r\n                                            return [\r\n                                                <MenuItem value={item.areaId}>{item.areaName}</MenuItem>\r\n                                            ]\r\n                                        })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </div>\r\n                        <button style={{ marginLeft: 230, backgroundColor: \"#04c23d\" }} onClick={() => { addSchool() }}>Add</button>\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ChooseArea;\r\n"]},"metadata":{},"sourceType":"module"}