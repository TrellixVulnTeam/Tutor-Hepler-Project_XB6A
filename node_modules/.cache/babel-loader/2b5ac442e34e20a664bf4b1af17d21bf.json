{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Tutor-Hepler-Project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase, { auth } from 'firebase';\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Layout from \"./components/layout/Layout\"; // Configure Firebase.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  apiKey: \"AIzaSyBPuahElQjBgbLM1E-5GTgxNfWhsDkyJVY\",\n  authDomain: \"lively-marking-322503.firebaseapp.com\",\n  projectId: \"lively-marking-322503\",\n  storageBucket: \"lively-marking-322503.appspot.com\",\n  messagingSenderId: \"661890962613\",\n  appId: \"1:661890962613:web:c2263d823d86d2ac231afc\",\n  measurementId: \"G-9QP37CCVF1\"\n};\nfirebase.initializeApp(config);\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: \"popup\",\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: \"/\",\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID]\n};\n\nfunction App() {\n  _s();\n\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n  // Listen to the Firebase Auth state and set the local state.\n\n  useEffect(() => {\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      const token = firebase.auth().currentUser.getIdToken();\n      console.log(user.xa);\n      setIsSignedIn(!!user);\n    });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n\n  if (!isSignedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please sign-in:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledFirebaseAuth, {\n        uiConfig: uiConfig,\n        firebaseAuth: firebase.auth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Layout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ES28sB8qKBhxH4u/sxzLxEgNPXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Tutor-Hepler-Project/src/App.js"],"names":["StyledFirebaseAuth","firebase","auth","useEffect","useState","BrowserRouter","Link","Redirect","Route","Switch","Dashboard","Layout","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","App","isSignedIn","setIsSignedIn","unregisterAuthObserver","onAuthStateChanged","user","token","currentUser","getIdToken","console","log","xa"],"mappings":";;;AACA,OAAOA,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,IAAkBC,IAAlB,QAA6B,UAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAT,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,MAA/C,QAA6D,kBAA7D;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB,C,CAGA;;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,uCAFC;AAGbC,EAAAA,SAAS,EAAE,uBAHE;AAIbC,EAAAA,aAAa,EAAE,mCAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE,2CANM;AAObC,EAAAA,aAAa,EAAE;AAPF,CAAf;AASAlB,QAAQ,CAACmB,aAAT,CAAuBR,MAAvB;AAEA,MAAMS,QAAQ,GAAG;AACf;AACAC,EAAAA,UAAU,EAAE,OAFG;AAGf;AACAC,EAAAA,gBAAgB,EAAE,GAJH;AAKf;AACAC,EAAAA,aAAa,EAAE,CAACvB,QAAQ,CAACC,IAAT,CAAcuB,kBAAd,CAAiCC,WAAlC;AANA,CAAjB;;AASA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,KAAD,CAA5C,CADa,CACwC;AAErD;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,sBAAsB,GAAG7B,QAAQ,CACpCC,IAD4B,GAE5B6B,kBAF4B,CAERC,IAAD,IAAU;AAC5B,YAAMC,KAAK,GAAGhC,QAAQ,CAACC,IAAT,GAAgBgC,WAAhB,CAA4BC,UAA5B,EAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,EAAjB;AAEAT,MAAAA,aAAa,CAAC,CAAC,CAACG,IAAH,CAAb;AACD,KAP4B,CAA/B;AASA,WAAO,MAAMF,sBAAsB,EAAnC,CAVc,CAUyB;AACxC,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAI,CAACF,UAAL,EAAiB;AACf,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,kBAAD;AACE,QAAA,QAAQ,EAAEP,QADZ;AAEE,QAAA,YAAY,EAAEpB,QAAQ,CAACC,IAAT;AAFhB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AACD,sBACE;AAAA,2BAEK,QAAC,aAAD;AAAA,6BACD,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAES;AAA3B;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAtCQgB,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport firebase, {auth} from 'firebase';\r\nimport { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Link, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Layout from \"./components/layout/Layout\";\r\n\r\n\r\n// Configure Firebase.\r\nconst config = {\r\n  apiKey: \"AIzaSyBPuahElQjBgbLM1E-5GTgxNfWhsDkyJVY\",\r\n  authDomain: \"lively-marking-322503.firebaseapp.com\",\r\n  projectId: \"lively-marking-322503\",\r\n  storageBucket: \"lively-marking-322503.appspot.com\",\r\n  messagingSenderId: \"661890962613\",\r\n  appId: \"1:661890962613:web:c2263d823d86d2ac231afc\",\r\n  measurementId: \"G-9QP37CCVF1\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: \"popup\",\r\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n  signInSuccessUrl: \"/\",\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n};\r\n\r\nfunction App() {\r\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\r\n\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase\r\n      .auth()\r\n      .onAuthStateChanged((user) => {\r\n        const token = firebase.auth().currentUser.getIdToken();\r\n        console.log(user.xa);\r\n\r\n        setIsSignedIn(!!user);\r\n      });\r\n\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n  }, []);\r\n\r\n  if (!isSignedIn) {\r\n    return (\r\n      <div>\r\n        <h1>My App</h1>\r\n        <p>Please sign-in:</p>\r\n        <StyledFirebaseAuth\r\n          uiConfig={uiConfig}\r\n          firebaseAuth={firebase.auth()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>   \r\n       \r\n         <BrowserRouter>\r\n        <Route path=\"/\" component={Layout}></Route>\r\n      </BrowserRouter>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}