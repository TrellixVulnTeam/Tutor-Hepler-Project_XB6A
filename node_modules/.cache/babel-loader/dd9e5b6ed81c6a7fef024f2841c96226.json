{"ast":null,"code":"import axios from \"axios\";\nconst axiosClient = axios.create({\n  //baseUrl: \"https://tutorhelper20210920193710.azurewebsites.net/api/v1\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n}); // Add a request interceptor\n\naxios.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\naxios.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  return response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  return Promise.reject(error);\n});\nexport default axiosClient;","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/api/axiosClient.js"],"names":["axios","axiosClient","create","headers","interceptors","request","use","config","error","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC/B;AACAC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFsB,CAAb,CAApB,C,CAOA;;AACAH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC/C;AACA,SAAOA,MAAP;AACD,CAHD,EAGG,UAAUC,KAAV,EAAiB;AAClB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAND,E,CAQA;;AACAR,KAAK,CAACI,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CAAgC,UAAUK,QAAV,EAAoB;AAClD;AACA;AACA,SAAOA,QAAP;AACD,CAJD,EAIG,UAAUH,KAAV,EAAiB;AAClB;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CARD;AAUA,eAAeP,WAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosClient = axios.create({\r\n  //baseUrl: \"https://tutorhelper20210920193710.azurewebsites.net/api/v1\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\naxios.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  return config;\r\n}, function (error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(function (response) {\r\n  // Any status code that lie within the range of 2xx cause this function to trigger\r\n  // Do something with response data\r\n  return response;\r\n}, function (error) {\r\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n  // Do something with response error\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default axiosClient;\r\n"]},"metadata":{},"sourceType":"module"}