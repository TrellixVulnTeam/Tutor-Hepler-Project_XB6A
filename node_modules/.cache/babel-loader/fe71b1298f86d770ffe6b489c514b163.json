{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pdcth\\\\Desktop\\\\Tutor-Hepler-Project\\\\src\\\\components\\\\management\\\\school\\\\ChooseArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Box, InputLabel, MenuItem, FormControl, Select } from '@mui/material';\nimport SchoolList from './SchoolList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.interceptors.request.use(config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\nconst ChooseArea = () => {\n  _s();\n\n  const [listArea, setListArea] = useState([]);\n  const [idSelected, setIdSelected] = useState(\"all\");\n  useEffect(() => {\n    const fetchRequest = async () => {\n      try {\n        await axios.get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/areas\", {\n          params: {\n            PageSize: 100\n          }\n        }).then(response => {\n          setListArea(response.data);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchRequest();\n  }, [idSelected]);\n\n  const handleChange = (event, value) => {\n    setIdSelected(value.props.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Select Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), listArea.map((item, id) => {\n              return [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.areaId,\n                children: item.areaName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this)];\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SchoolList, {\n      id: idSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseArea, \"n7oH1CZG4VE0IW9/1KJlm3G5gF8=\");\n\n_c = ChooseArea;\nexport default ChooseArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseArea\");","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/components/management/school/ChooseArea.jsx"],"names":["React","useState","useEffect","axios","Box","InputLabel","MenuItem","FormControl","Select","SchoolList","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","ChooseArea","listArea","setListArea","idSelected","setIdSelected","fetchRequest","get","params","PageSize","then","response","data","console","log","handleChange","event","value","props","minWidth","map","item","id","areaId","areaName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,MAAjD,QAA+D,eAA/D;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGAN,KAAK,CAACO,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACRA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC,EAA1E;AACA,SAAOJ,MAAP;AACH,CAJL,EAKKK,KAAD,IAAW;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPL;;AAUA,MAAMG,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,YAAY,GAAG,YAAY;AAC7B,UAAI;AACA,cAAMvB,KAAK,CACNwB,GADC,CACG,kEADH,EACuE;AACrEC,UAAAA,MAAM,EAAE;AACJC,YAAAA,QAAQ,EAAE;AADN;AAD6D,SADvE,EAMDC,IANC,CAMKC,QAAD,IAAc;AAChBR,UAAAA,WAAW,CAACQ,QAAQ,CAACC,IAAV,CAAX;AACH,SARC,CAAN;AAUH,OAXD,CAWE,OAAOd,KAAP,EAAc;AACZe,QAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACH;AACJ,KAfD;;AAgBAQ,IAAAA,YAAY;AACf,GAlBQ,EAkBN,CAACF,UAAD,CAlBM,CAAT;;AAoBA,QAAMW,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnCZ,IAAAA,aAAa,CAACY,KAAK,CAACC,KAAN,CAAYD,KAAb,CAAb;AACH,GAFD;;AAKA,sBACI;AAAA,4BACI;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEE,UAAAA,QAAQ,EAAE;AAAZ,SAAT;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,SAAS,MAAtB;AAAA,kCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAEJ,YAAlB;AAAA,oCACI,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKb,QAAQ,CAACkB,GAAT,CAAa,CAACC,IAAD,EAAOC,EAAP,KAAc;AACxB,qBAAO,cACH,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAED,IAAI,CAACE,MAAtB;AAAA,0BAA+BF,IAAI,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,sBADG,CAAP;AAGH,aAJA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAoBI,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEpB;AAAhB;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CArDD;;GAAMH,U;;KAAAA,U;AAuDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport { Box, InputLabel, MenuItem, FormControl, Select } from '@mui/material'\r\nimport SchoolList from './SchoolList';\r\n\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst ChooseArea = () => {\r\n    const [listArea, setListArea] = useState([]);\r\n    const [idSelected, setIdSelected] = useState(\"all\");\r\n\r\n    useEffect(() => {\r\n        const fetchRequest = async () => {\r\n            try {\r\n                await axios\r\n                    .get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/areas\", {\r\n                        params: {\r\n                            PageSize: 100,\r\n                        }\r\n                    })\r\n                    .then((response) => {\r\n                        setListArea(response.data)\r\n                    });\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchRequest();\r\n    }, [idSelected])\r\n\r\n    const handleChange = (event, value) => {\r\n        setIdSelected(value.props.value)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Box sx={{ minWidth: 120 }}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel>Select Area</InputLabel>\r\n\r\n                        <Select onChange={handleChange}>\r\n                            <MenuItem value=\"all\">All</MenuItem>\r\n                            {listArea.map((item, id) => {\r\n                                return [\r\n                                    <MenuItem value={item.areaId}>{item.areaName}</MenuItem>\r\n                                ]\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                            \r\n\r\n            </div>\r\n            <SchoolList id={idSelected} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChooseArea;\r\n"]},"metadata":{},"sourceType":"module"}