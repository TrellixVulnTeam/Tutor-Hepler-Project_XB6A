{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/pdcth/Desktop/Tutor-Hepler-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/pdcth/Desktop/Tutor-Hepler-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/pdcth/Desktop/Tutor-Hepler-Project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"./dashboard.scss\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";axios.interceptors.request.use(function(config){config.headers.authorization=\"Bearer \".concat(localStorage.getItem(\"jwtToken\"));return config;},function(error){return Promise.reject(error);});var CountPendingRequest=function CountPendingRequest(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),totalRequest=_useState2[0],setTotalRequest=_useState2[1];useEffect(function(){var fetchRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/tutor-requests\",{params:{PageSize:100}}).then(function(response){var result=response.data.data;var count=0;result.map(function(item){if(item.status==\"Pending\"){count++;}});setTotalRequest(count);});case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 8:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function fetchRequest(){return _ref.apply(this,arguments);};}();fetchRequest();},[]);return/*#__PURE__*/_jsx(\"span\",{children:totalRequest});};export default CountPendingRequest;","map":{"version":3,"sources":["C:/Users/pdcth/Desktop/Tutor-Hepler-Project/src/pages/dashboard/CountPendingRequest.jsx"],"names":["React","useState","useEffect","axios","interceptors","request","use","config","headers","authorization","localStorage","getItem","error","Promise","reject","CountPendingRequest","totalRequest","setTotalRequest","fetchRequest","get","params","PageSize","then","response","result","data","count","map","item","status","console","log"],"mappings":"meAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,SAACC,MAAD,CAAY,CACRA,MAAM,CAACC,OAAP,CAAeC,aAAf,kBAAyCC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAzC,EACA,MAAOJ,CAAAA,MAAP,CACH,CAJL,CAKI,SAACK,KAAD,CAAW,CACP,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACH,CAPL,EAUA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B,cAAwCd,QAAQ,EAAhD,wCAAOe,YAAP,eAAqBC,eAArB,eAEAf,SAAS,CAAC,UAAM,CACZ,GAAMgB,CAAAA,YAAY,0FAAG,yKAEPf,CAAAA,KAAK,CACNgB,GADC,CACG,2EADH,CACgF,CAC9EC,MAAM,CAAE,CACJC,QAAQ,CAAE,GADN,CADsE,CADhF,EAMDC,IANC,CAMI,SAACC,QAAD,CAAc,CAChB,GAAIC,CAAAA,MAAM,CAAGD,QAAQ,CAACE,IAAT,CAAcA,IAA3B,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAZ,CACAF,MAAM,CAACG,GAAP,CAAW,SAAAC,IAAI,CAAI,CACf,GAAIA,IAAI,CAACC,MAAL,EAAe,SAAnB,CAA8B,CAC1BH,KAAK,GACR,CACJ,CAJD,EAKAT,eAAe,CAACS,KAAD,CAAf,CACH,CAfC,CAFO,sFAmBbI,OAAO,CAACC,GAAR,cAnBa,mEAAH,kBAAZb,CAAAA,YAAY,0CAAlB,CAsBAA,YAAY,GACf,CAxBQ,CAwBN,EAxBM,CAAT,CAyBA,mBACI,sBACKF,YADL,EADJ,CAKH,CAjCD,CAoCA,cAAeD,CAAAA,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./dashboard.scss\"\r\nimport axios from \"axios\";\r\n\r\naxios.interceptors.request.use(\r\n    (config) => {\r\n        config.headers.authorization = `Bearer ${localStorage.getItem(\"jwtToken\")}`;\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nconst CountPendingRequest = () => {\r\n    const [totalRequest, setTotalRequest] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchRequest = async () => {\r\n            try {\r\n                await axios\r\n                    .get(\"https://tutorhelper20210920193710.azurewebsites.net/api/v1/tutor-requests\", {\r\n                        params: {\r\n                            PageSize: 100,\r\n                        }\r\n                    })\r\n                    .then((response) => {\r\n                        let result = response.data.data;\r\n                        let count = 0;\r\n                        result.map(item => {\r\n                            if (item.status == \"Pending\") {\r\n                                count++;\r\n                            }\r\n                        });\r\n                        setTotalRequest(count);\r\n                    });\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchRequest();\r\n    }, []);\r\n    return (\r\n        <span>\r\n            {totalRequest}\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport default CountPendingRequest\r\n"]},"metadata":{},"sourceType":"module"}